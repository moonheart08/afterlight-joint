using System.Text;
using Content.AL.UIKit.Widgets;
using Content.Client._AL.UI;
using Content.Shared.Shuttles.BUIStates;
using Content.Shared.Shuttles.Systems;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Map;
using Button = Robust.Client.UserInterface.Controls.Button;

namespace Content.Client.Shuttles.UI;

[GenerateTypedNameReferences]
public sealed partial class DockObject : VPanel
{
    public event Action? UndockPressed;
    public event Action? ViewPressed;

    public DockObject()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        Stylesheet = ALStyle.DisplaySheet.Stylesheet;
    }

    public void AddDock(DockingPortState state, ShuttleDockControl dockControl)
    {
        var viewButton = new Button()
        {
            Text = Loc.GetString("shuttle-console-view"),
        };

        viewButton.OnPressed += args =>
        {
            dockControl.SetViewedDock(state);
        };

        var container = new BoxContainer()
        {
            Orientation = BoxContainer.LayoutOrientation.Vertical,
            Children =
            {
                new Label()
                {
                    Text = state.Name,
                    HorizontalAlignment = HAlignment.Center,
                },
                viewButton
            }
        };

        DockContainer.AddChild(container);
    }

    public void SetName(string value)
    {
        DockedLabel.Text = value;
    }
}
